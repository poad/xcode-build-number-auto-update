name: Node.js modules auto update
 
on:
  pull_request:
    branches:
      - main
  push:
    branches:    
    - main 
  schedule:
    - cron:  '0 0 * * *'

  workflow_dispatch:

jobs:
  auto_update:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12
      uses: actions/setup-node@v2
      with:
        node-version: 12
        architecture: x64

    - name: update and test
      env:
        HUSKY_SKIP_INSTALL: 1
      uses: poad/update-node-modules@v1.0.5
      with:
        yarn: true
    - run: sudo chown -R runner dist
    - name: update and test
      env:
        HUSKY_SKIP_INSTALL: 1
      run: |
        yarn global add ts-jest && \
        yarn install && \
        yarn build && \
        yarn test && \
        rm -rf coverage dist node_modules

    - name: Commit files
      run: |
        git config --local user.email "ken-yo@mbr.nifty.com"
        git config --local user.name "Kenji Saito"
        TIMESTAMP=$(date)
        BRANCH_NAME="feature/bump-modules-$(date "+%Y%m%d-%H%M%S")"
        git checkout -b "${BRANCH_NAME}"
        if [ $(git diff package.json | wc -l) -eq 0 ]; then
          echo "CHANGE_STATE=no_changed" >> $GITHUB_ENV
          exit 0
        fi
        git add *
        git commit -m "Auto update at ${TIMESTAMP}"
        echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
        echo "TIMESTAMP=${TIMESTAMP}" >> $GITHUB_ENV
        echo "CHANGE_STATE=changed" >> $GITHUB_ENV

    - name: Push Changes
      if: success() && env.CHANGE_STATE == 'changed'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        branch: ${{ env.BRANCH_NAME }}

    - name: Prepare create pull request
      run: |
        repo=$(echo "${{ github.repository }}" | cut -d'/' -f2)
        echo "REPO_NAME=${repo}" >> $GITHUB_ENV

    - name: Create pull request
      id: create-pull-request
      if: success() && env.CHANGE_STATE == 'changed'
      uses: poad/github-pull-requester@v1.0.0
      with:
        head_branch: ${{ env.BRANCH_NAME }}
        title: ${{ format('Auto update at {0}', env.TIMESTAMP) }}
        body: ${{ format('Update the modules at {0}', env.TIMESTAMP) }}
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        repository: ${{ env.REPO_NAME }}
        owner: ${{ github.repository_owner }}

    - name: Extract response
      env:
        RESULT: ${{ steps.create-pull-request.outputs.result }}
        RESULT_JSON: ${{ toJSON(steps.create-pull-request.outputs.result) }}
      run: |
        PULL_REQUEST_HTML_URL=$(echo ${RESULT} | jq -r .data.html_url)
        echo "PULL_REQUEST_HTML_URL=${PULL_REQUEST_HTML_URL}" >> $GITHUB_ENV
        PULL_REQUEST_NUMBER=$(echo ${RESULT} | jq -r .data.number)
        echo "PULL_REQUEST_NUMBER=${PULL_REQUEST_NUMBER}" >> $GITHUB_ENV
        PULL_REQUEST_ID=$(echo ${RESULT} | jq -r .data.node_id)
        echo "PULL_REQUEST_ID=${PULL_REQUEST_ID}" >> $GITHUB_ENV

    - name: Send result with Pull Request
      if: success() && env.CHANGE_STATE == 'changed'
      uses: slackapi/slack-github-action@v1.15.0
      with:
        payload: ${{ env.SLACKK_PAYLOAD }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Send result without Pull Request
      if: success() && env.CHANGE_STATE != 'changed'
      uses: slackapi/slack-github-action@v1.15.0
      with:
        payload: "{\"text\":${{ toJSON(format('{0} {1}', github.workflow, job.status)) }}}"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        text: ${{ format('{0} {1}', github.workflow, job.status) }}

    - name: Pull request auto merge enabler
      if: success() && env.CHANGE_STATE == 'changed'
      uses: poad/github-pull-request-auto-merge-enable-action@v1.0.0
      with:
        pull_request_id: ${{ env.PULL_REQUEST_ID }}
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        repository: ${{ github.event.repository.name }}
        owner: ${{ github.repository_owner }}
        merge_method: SQUASH
